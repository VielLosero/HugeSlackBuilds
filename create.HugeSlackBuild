#!/bin/bash
# Copyright 2024 Viel Losero.
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) && CWD=$(pwd)
# make temp dir
TMP_DIR=/tmp/HugeSlackBuilds
[[ ! -d $TMP_DIR ]] && mkdir -vp $TMP_DIR
# make log file
LOG_FILE=/tmp/HugeSlackBuilds.log
echo > $LOG_FILE
#
#OUT_DIR=.
OUT_DIR=$TMP_DIR
#OUT_FILE=HugeSlackBuild
REPO_SOURCE=/opt/slackware-repositories/x86/slackware/slackware64-15.0
# default verbose
VERBOSE="${VERBOSE:-0}"

# function that make HugeSlackBuild files
make_huge(){
# Sanity check
#pwd
if [ "$(ls *.SlackBuild | wc -l)" == "1" ] ; then 

# find SlackBuild name
#SLACKBUILDNAME=$(ls *.SlackBuild | head -1 | cut -d. -f1)
SLACKBUILDNAME=$(ls *.SlackBuild | head -1 | sed 's/.SlackBuild//')
OUT_FILE=${SLACKBUILDNAME}.HugeSlackBuild

# echo bash first line to HugeSlackBuild
echo "#!/bin/bash" > $OUT_DIR/$OUT_FILE

# echo LICENCE
cat <<EOF >> $OUT_DIR/$OUT_FILE
# Copyright 2024 Viel Losero.
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
EOF


# echo mkdir for dirs in . to HugeSlackBuild
for dir in $(find . -type d | grep -v "^.$" ) ; do
[[ "$VERBOSE" -eq "2" ]] && \
  echo "Found dir: $dir"
  echo "mkdir -vp $dir" >> $OUT_DIR/$OUT_FILE
done

# echo cat files for files in . to HugeSlackBuild
for file in $(find . -type f ) ; do
  if [ "$file" == "./create.HugeSlackBuild" -o "$file" == "./$OUT_FILE" -o "$file" == "./${OUT_FILE}.tar.gz" ] ; then
    echo "Excluding $file"
  else
[[ "$VERBOSE" -eq "2" ]] && \
    echo "Found file: $file"
    # cat file in base64 to HugeSlackBuild
    echo "cat <<EOF | base64 -d > $file" >> $OUT_DIR/$OUT_FILE
    cat $file | base64 >> $OUT_DIR/$OUT_FILE
    echo "EOF" >> $OUT_DIR/$OUT_FILE
    #echo md5sum to HugeSlackbuild
    echo "echo \"$(md5sum $file)\" | md5sum -c || exit 1" >> $OUT_DIR/$OUT_FILE

  fi
done

# add run SlackBuild auto 
echo "bash $SLACKBUILDNAME.SlackBuild" >> ${OUT_DIR}/${OUT_FILE}

# cd to out dir to compres only file and no dirs
cd ${OUT_DIR} || exit 1

# add md5 to the name
MD5=$(md5sum ${OUT_FILE} | cut -d" " -f1)
# move file
mv ${OUT_FILE} ${OUT_FILE}.$MD5
[[ "$VERBOSE" -eq "3" ]] && \
  echo "MD5: ${OUT_FILE}.$MD5"

# compress HugeSlackBuild file
#tar -czvf ${OUT_DIR}/${OUT_FILE}.tar.gz ${OUT_DIR}/${OUT_FILE}
tar --zstd -cf ${OUT_FILE}.tar.zst ${OUT_FILE}.$MD5
[[ "$VERBOSE" -eq "0" ]] && \
  echo "Output file ${OUT_FILE}.tar.zst"

# add md5 to compresed file name
#MD5_ZSTD=$(md5sum ${OUT_FILE}.tar.zst | cut -d" " -f1)

# 
#mv ${OUT_FILE}.tar.zst ${OUT_FILE}.${MD5_ZSTD}.tar.zst


else
  DIR_NOW=$(pwd)
  echo "Error to many SlackBuild in $DIR_NOW" >> $LOG_FILE 
[[ "$VERBOSE" -ge "0" ]] && \
  echo "Error to many SlackBuild in $DIR_NOW" 
  
fi
}

# for i in $(grep ".*\.SlackBuild$" /opt/slackware-repositories/x86/slackware/slackware64-15.0/CHECKSUMS.md5 | cut -d" " -f3-) ; do x=$(echo $i | rev | cut -d/ -f2-  | rev | cut -d" " -f3) ; if [ "$(ls /opt/slackware-repositories/x86/slackware/slackware64-15.0/$x/*.SlackBuild | wc -l)" != "1" ] ; then echo $i ; fi   ; done > /tmp/more.than.2.slackbuild

# find SlackBuild files to make HugeSlackBuilds
for slackbuild_line in $(grep ".*\.SlackBuild$" ${REPO_SOURCE}/CHECKSUMS.md5 | cut -d" " -f3-) ; do
  #echo "$slackbuild_line"
  slackbuild_path=$(echo $slackbuild_line | rev | cut -d/ -f2-  | rev | cut -d" " -f3)
[[ "$VERBOSE" -eq "0" ]] && \
  echo "[+] Processing ${REPO_SOURCE}/$slackbuild_path"
  cd ${REPO_SOURCE}/$slackbuild_path || exit 1
[[ "$VERBOSE" -eq "1" ]] && \
  echo -n "cd " &&  pwd
  make_huge
done


